{"ast":null,"code":"import Axios from \"axios\";\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, BASE_URL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_ADD_FAIL, PRODUCT_ADD_SUCCESS, PRODUCT_ADD_REQUEST, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL } from \"../constants/Constant\";\nexport const listProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(BASE_URL + \"/api/list\", {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const itemDetails = id => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(BASE_URL + `/api/list/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const itemUpdate = item => async dispatch => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.put(BASE_URL + `/api/list/update/${item.id}`, item, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const itemAdd = item => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_ADD_REQUEST\n  });\n  const {\n    userSignin: {\n      user\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post(BASE_URL + `/api/list/add`, item, {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_ADD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_ADD_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const itemDelete = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await Axios.delete(BASE_URL + `/api/list/delete/${id}`);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/msi/Desktop/Tutorial/test/frontend/src/actions/productAction.js"],"names":["Axios","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","BASE_URL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_ADD_FAIL","PRODUCT_ADD_SUCCESS","PRODUCT_ADD_REQUEST","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","listProducts","dispatch","type","data","get","headers","Authorization","user","token","payload","error","message","itemDetails","id","itemUpdate","item","put","itemAdd","getState","userSignin","post","itemDelete","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,oBADF,EAEEC,uBAFF,EAGEC,uBAHF,EAIEC,iBAJF,EAKEC,oBALF,EAMEC,oBANF,EAOEC,QAPF,EAQEC,sBARF,EASEC,sBATF,EAUEC,mBAVF,EAWEC,gBAXF,EAYEC,mBAZF,EAaEC,mBAbF,EAcEC,sBAdF,EAeEC,sBAfF,EAgBEC,mBAhBF,QAiBO,uBAjBP;AAmBA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEd;AADC,GAAD,CAAR;;AAIA,MAAI;AACF,UAAM;AAAEe,MAAAA;AAAF,QAAW,MAAMpB,KAAK,CAACqB,GAAN,CAAUd,QAAQ,GAAG,WAArB,EAAkC;AACvDe,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASC,IAAI,CAACC,KAAM;AAAtC;AAD8C,KAAlC,CAAvB;AAGAP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEb,oBADC;AAEPoB,MAAAA,OAAO,EAAEN;AAFF,KAAD,CAAR;AAID,GARD,CAQE,OAAOO,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEf,iBADC;AAEPsB,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAFR,KAAD,CAAR;AAID;AACF,CAnBM;AAqBP,OAAO,MAAMC,WAAW,GAAIC,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AACrDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEjB;AADC,GAAD,CAAR;;AAIA,MAAI;AACF,UAAM;AAAEkB,MAAAA;AAAF,QAAW,MAAMpB,KAAK,CAACqB,GAAN,CAAUd,QAAQ,GAAI,aAAYuB,EAAG,EAArC,CAAvB;AACAZ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEhB,uBAAR;AAAiCuB,MAAAA,OAAO,EAAEN;AAA1C,KAAD,CAAR;AACD,GAHD,CAGE,OAAOO,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAElB,oBADC;AAEPyB,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAFR,KAAD,CAAR;AAID;AACF,CAdM;AAgBP,OAAO,MAAMG,UAAU,GAAIC,IAAD,IAAU,MAAOd,QAAP,IAAoB;AACtDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEX;AADC,GAAD,CAAR;;AAIA,MAAI;AACF,UAAM;AAAEY,MAAAA;AAAF,QAAW,MAAMpB,KAAK,CAACiC,GAAN,CACrB1B,QAAQ,GAAI,oBAAmByB,IAAI,CAACF,EAAG,EADlB,EAErBE,IAFqB,EAGrB;AACEV,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AADX,KAHqB,CAAvB;AAOAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,sBAAR;AAAgCiB,MAAAA,OAAO,EAAEN;AAAzC,KAAD,CAAR;AACD,GATD,CASE,OAAOO,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,mBADC;AAEPgB,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAFR,KAAD,CAAR;AAID;AACF,CApBM;AAsBP,OAAO,MAAMM,OAAO,GAAIF,IAAD,IAAU,OAAOd,QAAP,EAAiBiB,QAAjB,KAA8B;AAC7DjB,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEN;AADC,GAAD,CAAR;AAIA,QAAM;AACJuB,IAAAA,UAAU,EAAE;AAAEZ,MAAAA;AAAF;AADR,MAEFW,QAAQ,EAFZ;;AAIA,MAAI;AACF,UAAM;AAAEf,MAAAA;AAAF,QAAW,MAAMpB,KAAK,CAACqC,IAAN,CAAW9B,QAAQ,GAAI,eAAvB,EAAuCyB,IAAvC,EAA6C;AAClEV,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASC,IAAI,CAACC,KAAM;AAAtC;AADyD,KAA7C,CAAvB;AAGAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,mBAAR;AAA6Bc,MAAAA,OAAO,EAAEN;AAAtC,KAAD,CAAR;AACD,GALD,CAKE,OAAOO,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,gBADC;AAEPe,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAFR,KAAD,CAAR;AAID;AACF,CApBM;AAsBP,OAAO,MAAMU,UAAU,GAAIR,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AACpD,MAAI;AACF,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAMpB,KAAK,CAACuC,MAAN,CAAahC,QAAQ,GAAI,oBAAmBuB,EAAG,EAA/C,CAAvB;AACAZ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,sBAAR;AAAgCW,MAAAA,OAAO,EAAEN;AAAzC,KAAD,CAAR;AACD,GAHD,CAGE,OAAOO,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,mBADC;AAEPU,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAFR,KAAD,CAAR;AAID;AACF,CAVM","sourcesContent":["import Axios from \"axios\";\nimport {\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  BASE_URL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_ADD_FAIL,\n  PRODUCT_ADD_SUCCESS,\n  PRODUCT_ADD_REQUEST,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n} from \"../constants/Constant\";\n\nexport const listProducts = () => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST,\n  });\n\n  try {\n    const { data } = await Axios.get(BASE_URL + \"/api/list\", {\n      headers: { Authorization: `Bearer ${user.token}` },\n    });\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message,\n    });\n  }\n};\n\nexport const itemDetails = (id) => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n  });\n\n  try {\n    const { data } = await Axios.get(BASE_URL + `/api/list/${id}`);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message,\n    });\n  }\n};\n\nexport const itemUpdate = (item) => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n  });\n\n  try {\n    const { data } = await Axios.put(\n      BASE_URL + `/api/list/update/${item.id}`,\n      item,\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.message,\n    });\n  }\n};\n\nexport const itemAdd = (item) => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_ADD_REQUEST,\n  });\n\n  const {\n    userSignin: { user },\n  } = getState();\n\n  try {\n    const { data } = await Axios.post(BASE_URL + `/api/list/add`, item, {\n      headers: { Authorization: `Bearer ${user.token}` },\n    });\n    dispatch({ type: PRODUCT_ADD_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_ADD_FAIL,\n      payload: error.message,\n    });\n  }\n};\n\nexport const itemDelete = (id) => async (dispatch) => {\n  try {\n    const { data } = await Axios.delete(BASE_URL + `/api/list/delete/${id}`);\n    dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}