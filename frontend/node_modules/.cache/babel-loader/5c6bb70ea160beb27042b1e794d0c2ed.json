{"ast":null,"code":"import Axios from \"axios\";\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, BASE_URL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_ADD_FAIL, PRODUCT_ADD_SUCCESS, PRODUCT_ADD_REQUEST, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL } from \"../constants/Constant\";\nexport const listProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(BASE_URL + \"/api/list\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const itemDetails = id => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(BASE_URL + `/api/list/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const itemUpdate = item => async dispatch => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.put(BASE_URL + `/api/list/update/${item.id}`, item, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const itemAdd = item => async dispatch => {\n  dispatch({\n    type: PRODUCT_ADD_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(BASE_URL + `/api/list/add`, item, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: PRODUCT_ADD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_ADD_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const itemDelete = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await Axios.delete(BASE_URL + `/api/list/delete/${id}`);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/msi/Desktop/Tutorial/test/frontend/src/actions/productAction.js"],"names":["Axios","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","BASE_URL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_ADD_FAIL","PRODUCT_ADD_SUCCESS","PRODUCT_ADD_REQUEST","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","listProducts","dispatch","type","data","get","payload","error","message","itemDetails","id","itemUpdate","item","put","headers","itemAdd","post","itemDelete","delete"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport {\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    BASE_URL,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_ADD_FAIL,\n    PRODUCT_ADD_SUCCESS,\n    PRODUCT_ADD_REQUEST,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n} from \"../constants/Constant\";\n\nexport const listProducts = () => async(dispatch) => {\n    dispatch({\n        type: PRODUCT_LIST_REQUEST,\n    });\n\n    try {\n        const { data } = await Axios.get(BASE_URL + \"/api/list\");\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.message,\n        });\n    }\n};\n\nexport const itemDetails = (id) => async(dispatch) => {\n    dispatch({\n        type: PRODUCT_DETAILS_REQUEST,\n    });\n\n    try {\n        const { data } = await Axios.get(BASE_URL + `/api/list/${id}`);\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.message,\n        });\n    }\n};\n\nexport const itemUpdate = (item) => async(dispatch) => {\n    dispatch({\n        type: PRODUCT_UPDATE_REQUEST,\n    });\n\n    try {\n        const { data } = await Axios.put(\n            BASE_URL + `/api/list/update/${item.id}`,\n            item, {\n                headers: { \"Content-Type\": \"application/json\" },\n            }\n        );\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.message,\n        });\n    }\n};\n\nexport const itemAdd = (item) => async(dispatch) => {\n    dispatch({\n        type: PRODUCT_ADD_REQUEST,\n    });\n\n    try {\n        const { data } = await Axios.post(BASE_URL + `/api/list/add`, item, {\n            headers: { \"Content-Type\": \"application/json\" },\n        });\n        dispatch({ type: PRODUCT_ADD_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_ADD_FAIL,\n            payload: error.message,\n        });\n    }\n};\n\nexport const itemDelete = (id) => async(dispatch) => {\n\n    try {\n        const { data } = await Axios.delete(BASE_URL + `/api/list/delete/${id}`);\n        dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.message,\n        });\n    }\n};"]},"metadata":{},"sourceType":"module"}