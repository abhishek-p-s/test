{"ast":null,"code":"import Axios from \"axios\";\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, BASE_URL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_ADD_FAIL, PRODUCT_ADD_SUCCESS, PRODUCT_ADD_REQUEST } from \"../constants/Constant\";\nexport const listProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(BASE_URL + \"/api/list\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const itemDetails = id => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(BASE_URL + `/api/list/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const itemUpdate = item => async dispatch => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.put(BASE_URL + `/api/list/update/${item.id}`, item, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const itemAdd = item => async dispatch => {\n  dispatch({\n    type: PRODUCT_ADD_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(BASE_URL + `/api/list/add`, item, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: PRODUCT_ADD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_ADD_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const itemDelete = id => async dispatch => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(BASE_URL + `/api/list/delete/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/msi/Desktop/Tutorial/test/frontend/src/actions/productAction.js"],"names":["Axios","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","BASE_URL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_ADD_FAIL","PRODUCT_ADD_SUCCESS","PRODUCT_ADD_REQUEST","listProducts","dispatch","type","data","get","payload","error","message","itemDetails","id","itemUpdate","item","put","headers","itemAdd","post","itemDelete","PRODUCT_DELETE_REQUEST"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport {\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  BASE_URL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_ADD_FAIL,\n  PRODUCT_ADD_SUCCESS,\n  PRODUCT_ADD_REQUEST,\n} from \"../constants/Constant\";\n\nexport const listProducts = () => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST,\n  });\n\n  try {\n    const { data } = await Axios.get(BASE_URL + \"/api/list\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message,\n    });\n  }\n};\n\nexport const itemDetails = (id) => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n  });\n\n  try {\n    const { data } = await Axios.get(BASE_URL + `/api/list/${id}`);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message,\n    });\n  }\n};\n\nexport const itemUpdate = (item) => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n  });\n\n  try {\n    const { data } = await Axios.put(\n      BASE_URL + `/api/list/update/${item.id}`,\n      item,\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.message,\n    });\n  }\n};\n\nexport const itemAdd = (item) => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_ADD_REQUEST,\n  });\n\n  try {\n    const { data } = await Axios.post(BASE_URL + `/api/list/add`, item, {\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n    dispatch({ type: PRODUCT_ADD_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_ADD_FAIL,\n      payload: error.message,\n    });\n  }\n};\n\nexport const itemDelete = (id) => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n  });\n\n  try {\n    const { data } = await Axios.get(BASE_URL + `/api/list/delete/${id}`);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}